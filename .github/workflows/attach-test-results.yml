# This is the helper workflow that attaches test results of PR build that was created from fork.
# Reference: https://github.com/EnricoMi/publish-unit-test-result-action/blob/v1.20/README.md#support-fork-repositories-and-dependabot-branches
name: Attach Unit Test Results
on:
  workflow_run:
    workflows: ["Build, Test, Lint for Pull Requests"]
    types:
      - completed
permissions: {}
jobs:
  unit-test-results:
    name: Unit Test Results
    runs-on: ubuntu-latest
    permissions:
      actions: read
      checks: write
      pull-requests: write
    if: github.event.workflow_run.conclusion != 'skipped'
    steps:
      - name: Download and Extract Artifacts
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
           mkdir -p artifacts && cd artifacts
           artifacts_url=${{ github.event.workflow_run.artifacts_url }}
           gh api "$artifacts_url" -q '.artifacts[] | [.name, .archive_download_url] | @tsv' | while read artifact
           do
             IFS=$'\t' read name url <<< "$artifact"
             gh api $url > "$name.zip"
             unzip -d "$name" "$name.zip"
           done
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.35
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          job_summary: true
          check_name: 'Playwright Test Results'
          event_file: artifacts/Event File/event.json
          event_name: ${{ github.event.workflow_run.event }}
          files: "artifacts/**/*.xml"
      - name: Additional output
        if: always()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/check-runs
          name: 'Test Check'
          head_sha: ${{ github.event.workflow_run.head_sha }}
          status: 'completed'
          conclusion: 'success'
          output: |
            title: 'Get Results Here'
            summary: 'Tests can be found here'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Report Check Run ID
        if: always()
        id: checkRunId
        run: |
          URI="https://api.github.com"
          API_HEADER="Accept: application/vnd.github.v3+json"
          AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
          body=$(curl -sSL -H "${AUTH_HEADER}" -H "$API_HEADER" "$URI/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/jobs")
          echo ${GITHUB_RUN_ID}
          echo ${GITHUB_REPOSITORY}
          id=$(echo "$body" | jq .jobs | jq .[-1] | jq .id)
          echo ::set-output name=checkid::$id
      - name: Echo Run ID
        run: |
          echo ${{ steps.checkRunId.outputs.checkid }}
